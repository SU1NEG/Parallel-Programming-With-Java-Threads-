package hello;

import java.util.Random;
import java.util.Scanner;

public class aaa {
//MUHAMMED SAVAÅž NO:210408003
	public static void main(String[] args) {

		int rowsA = 500;
		int colsA = 500;
		int rowsB = 500;
		int colsB = 500;


		int[][] matrixA = generateRandomMatrix(rowsA, colsA);
		int[][] matrixB = generateRandomMatrix(rowsB, colsB);


		long startTime = System.nanoTime();
		int[][] resultMatrix = multiplyMatrices(matrixA, matrixB);
		long endTime = System.nanoTime();


		System.out.println("Matrix A:");
		printMatrix(matrixA);

		System.out.println("\nMatrix B:");
		printMatrix(matrixB);

		System.out.println("\nResult Matrix:");
		printMatrix(resultMatrix);


		System.out.println("\nExecution Time: " + (endTime - startTime) + " nanoseconds");
	}


	private static int[][] generateRandomMatrix(int rows, int cols) {
		int[][] matrix = new int[rows][cols];
		Random rand = new Random();

		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < cols; j++) {
				matrix[i][j] = rand.nextInt(10); 
			}
		}

		return matrix;
	}


	private static int[][] multiplyMatrices(int[][] matrixA, int[][] matrixB) {
		int rowsA = matrixA.length;
		int colsA = matrixA[0].length;
		int colsB = matrixB[0].length;

		int[][] resultMatrix = new int[rowsA][colsB];

		for (int i = 0; i < rowsA; i++) {
			for (int j = 0; j < colsB; j++) {
				for (int k = 0; k < colsA; k++) {
					resultMatrix[i][j] += matrixA[i][k] * matrixB[k][j];
				}
			}
		}

		return resultMatrix;
	}


	private static void printMatrix(int[][] matrix) {
		for (int[] row : matrix) {
			for (int num : row) {
				System.out.print(num + " ");
			}
			System.out.println();
		}
	}



}


